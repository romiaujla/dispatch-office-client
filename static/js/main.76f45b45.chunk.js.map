{"version":3,"sources":["Contexts/AppContext.js","Components/DesktopMenu/DesktopMenu.js","Components/MobileMenu/MobileMenu.js","Components/Header/Header.js","Components/HomePageSection/HomePageSection.js","Routes/HomePage/HomePage.js","Components/CreateAccount/CreateAccount.js","Routes/CreateAccountPage/CreateAccountPage.js","config.js","Services/TokenService.js","Services/AuthApiService.js","Components/LoginForm/LoginForm.js","Routes/LoginPage/LoginPage.js","Components/LoadListBox/LoadListBox.js","Components/DriverCard/DriverCard.js","Components/IdleDriversBox/IdleDriversBox.js","Routes/DashboardPage/DashboardPage.js","Services/CarrierServices.js","Components/Logout/Logout.js","Services/DriversService.js","Services/EquipmentsService.js","Routes/LoadsPage/LoadsPage.js","Components/EquipmentCard/EquipmentCard.js","Routes/EquipmentsPage/EquipmentsPage.js","Routes/DriversPage/DriversPage.js","Components/App/App.js","index.js"],"names":["React","createContext","basePath","loggedIn","newUser","setLoggedIn","setNewUser","setShipments","getShipments","getIdleDrivers","loggedInCarrier","shipments","setLoggedInCarrier","idleDrivers","equipments","geEquipments","DesktopMenu","this","context","className","to","Component","contextType","AppContext","MobileMenu","props","changeMenuOpenState","setState","menuOpen","state","closeMenuWhenLargerScreen","e","window","innerWidth","componentDidMount","addEventListener","onClick","Header","HomePageSection","HomePage","CreateAccount","handleFormSubmit","preventDefault","target","username","password","full_name","company_name","mc_num","user","value","console","log","onSubmit","htmlFor","type","id","name","required","onChange","CreateAccountPage","API_ENDPOINT","process","TOKEN_KEY","TokenService","saveAuthToken","token","localStorage","setItem","config","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","AuthApiService","postLogin","credentials","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Error","error","message","catch","LoginForm","incorrectUsername","incorrectPassword","handleSubmitLoginForm","focus","authToken","loggedInUser","onLoginSuccess","defaultProps","LoginPage","a","history","push","LoadListBox","formatDate","dbDate","date","Date","day","getDate","month","getMonth","year","getYear","sortShipments","property","sort","b","getLoadsWithStatus","status","filter","shipment","length","map","key","pickup_warehouse","city","pickup_date","miles","rate","toString","replace","broker","delivery_warehouse","delivery_date","loadStatus","DriverCard","driver","pay_rate","equipment","unit_num","IdleDriversBox","renderIdleDriversList","iDriver","DashboardPage","CarrierService","getCarrierData","carrierData","err","getCarrierInfo","carrierInfo","Logout","getCarrierInfoInComponent","CarrierServices","carrier","handleLogout","DriversService","getDriversData","response","driversData","EquipmentService","getEquipments","Authorization","LoadsPage","EquipmentCard","EquipmentsPage","handleAddEquipment","filterEquipments","filters","renderEquipmentList","equip","DriversPage","App","data","Provider","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76f45b45.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext({\n    basePath: '',\n    loggedIn: () => {},\n    newUser: () => {},\n    setLoggedIn: () => {},\n    setNewUser: () => {},\n    setShipments: () => {},\n    getShipments: () => {},\n    getIdleDrivers: () => {},\n    loggedInCarrier: {},\n    shipments: [],\n    setLoggedInCarrier: () => {},\n    idleDrivers: [],\n    equipments: [],\n    geEquipments: () => {},\n});","import React, { Component } from 'react';\nimport './DesktopMenu.css';\nimport {Link} from 'react-router-dom';\nimport AppContext from '../../Contexts/AppContext';\n\nclass DesktopMenu extends Component {\n\n    static contextType = AppContext;\n\n    render() {\n\n        const {basePath} = this.context;\n        \n        return (\n            <nav className='DesktopMenu'>\n                <ul className='menu-list'>\n                <li className='menu-item'>\n                    <Link to={`${basePath}/dashboard`}>\n                        Dashboard\n                        </Link>\n                </li>\n                <li className='menu-item'>\n                    <Link to={`${basePath}/loads`}>\n                        Loads\n                        </Link>\n                </li>\n                <li className='menu-item'>\n                    <Link to={`${basePath}/equipments`}>\n                        Equipments\n                        </Link>\n                </li>\n                <li className='menu-item'>\n                    <Link to={`${basePath}/drivers`}>\n                        Drivers\n                        </Link>\n                </li>\n            </ul>\n            </nav>\n        );\n    }\n}\n\n\nexport default DesktopMenu","import React, { Component } from 'react';\nimport './MobileMenu.css';\nimport AppContext from '../../Contexts/AppContext';\nimport { Link } from 'react-router-dom';\n\nclass MobileMenu extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            menuOpen: false\n        }\n    }\n\n    static contextType = AppContext;\n\n    changeMenuOpenState = () => {\n        this.setState({\n            menuOpen: !this.state.menuOpen\n        })\n    }\n\n    // closes menu \n    // When it is open on mobile and resized to larger screen\n    // and the menu for larger screen pops up and this closes\n    closeMenuWhenLargerScreen = (e) => {\n        if (window.innerWidth > 1050) {\n            this.setState({\n                menuOpen: false\n            })\n        }\n    }\n\n    componentDidMount = () => {\n        window.addEventListener('resize', this.closeMenuWhenLargerScreen)\n    }\n\n\n    render() {\n\n        const { basePath } = this.context;\n\n        return (\n            <nav className='MobileMenu'>\n                <button className='menu-button' onClick={this.changeMenuOpenState}>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                </button>\n                {\n                    this.state.menuOpen &&\n                    <ul className='menu-list'>\n                        <button\n                            className='close-button'\n                            onClick={this.changeMenuOpenState}>\n                            X\n                        </button>\n                        <li className='menu-item'>\n                            <Link\n                                to={`${basePath}/dashboard`}\n                                onClick={this.changeMenuOpenState}>\n                                Dashboard\n                            </Link>\n                        </li>\n                        <li className='menu-item'>\n                            <Link\n                                to={`${basePath}/loads`}\n                                onClick={this.changeMenuOpenState}>\n                                Loads\n                            </Link>\n                        </li>\n                        <li className='menu-item'>\n                            <Link\n                                to={`${basePath}/equipments`}\n                                onClick={this.changeMenuOpenState}>\n                                Equipments\n                            </Link>\n                        </li>\n                        <li className='menu-item'>\n                            <Link\n                                to={`${basePath}/drivers`}\n                                onClick={this.changeMenuOpenState}>\n                                Drivers\n                            </Link>\n                        </li>\n                    </ul>\n                }\n            </nav>\n        );\n    }\n}\n\nexport default MobileMenu;","import React, { Component } from 'react';\nimport './Header.css';\nimport { Link } from 'react-router-dom';\nimport AppContext from '../../Contexts/AppContext';\nimport DesktopMenu from '../DesktopMenu/DesktopMenu';\nimport MobileMenu from '../MobileMenu/MobileMenu';\n\nclass Header extends Component {\n\n    static contextType = AppContext;\n\n    render() {\n\n        const {loggedIn} = this.context;\n\n        return (\n            <header className='Header blue-back white-text'>\n                <div className='width-wrapper'>\n                    <Link to='/'>\n                        <div className='logo'>\n                            <span>Dispatch</span>\n                            <span>Office</span>\n                        </div>\n                    </Link>\n                    {\n                        loggedIn &&\n                        <>\n                            <DesktopMenu />\n                            <MobileMenu />\n                        </>\n                    }\n                </div>\n            </header>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AppContext from '../../Contexts/AppContext';\n\nclass HomePageSection extends Component {\n\n    static contextType = AppContext;\n\n    render() {\n\n        const { basePath } = this.context;\n\n        return (\n            <div className='HomePageSection width-wrapper'>\n                <p>\n                    Welcome !! to <span className='span-title red-text'>Dispatch Office</span>, a transportation management\n                    system, which assists freight managers with workflow,\n                    automation and shipment scheduling.\n                </p>\n                <Link to={`${basePath}/create-account`} className='app-button'>\n                    Create Account\n                </Link>\n                <Link to={`${basePath}/login`} className='app-link'>\n                    Login\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default HomePageSection;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './HomePage.css';\nimport AppContext from '../../Contexts/AppContext';\nimport HomePageSection from '../../Components/HomePageSection/HomePageSection';\n\nclass HomePage extends Component {\n\n    static contextType = AppContext;\n\n    render() {\n        const { basePath, loggedIn, newUser } = this.context;\n        return (\n            !loggedIn\n                ?   <section className='HomePage blue-text'>\n                        <HomePageSection />\n                    </section>\n                :   !newUser\n                    ? <Redirect to={`${basePath}/dashboard`} />\n                    : <Redirect to={`${basePath}/newuser`} />\n        );\n    }\n}\n\nexport default HomePage;","import React, { Component } from 'react';\nimport './CreateAccount.css';\nimport {\n    validateUserName,\n    validatePassword\n} from '../../HelperFunctions/HelperFunctions';\n\nclass CreateAccount extends Component {\n\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        const { username, password, full_name, company_name, mc_num } = e.target\n        const user = {\n            username: username.value,\n            password: password.value,\n            company_name: company_name.value,\n            mc_num: mc_num.value,\n            full_name: full_name.value\n        }\n        console.log(user);\n    }\n\n    render() {\n        return (\n            <form className='CreateAccount width-wrapper' onSubmit={(e) => { this.handleFormSubmit(e) }}>\n                <fieldset>\n                    <legend className='blue-back white-text'>\n                        Create Account\n                    </legend>\n                    <div className='flex'>\n                        <label htmlFor='username'>\n                            <span className='input-title'>* Username:</span>\n                            <input\n                                type='text'\n                                id='username'\n                                name='username'\n                                required\n                                onChange={(e) => { validateUserName(e) }}\n                            />\n                            <span className='error'>Invalid Username</span>\n                        </label>\n                        <label htmlFor='password'>\n                            <span className='input-title'>* Password:</span>\n                            <input\n                                type='password'\n                                id='password'\n                                name='password'\n                                required\n                                onChange={(e) => { validatePassword(e) }} />\n                            <span className='error'>Password Error</span>\n                        </label>\n                        <label htmlFor='full_name'>\n                            <span className='input-title'>* Full Name:</span>\n                            <input type='text' id='full_name' name='full_name' required />\n                            <span className='error'>Invalid Username</span>\n                        </label>\n                        <label htmlFor='company_name'>\n                            <span className='input-title'>Company Name:</span>\n                            <input type='text' id='company_name' name='company_name' required />\n                            <span className='error'>Company Name Error</span>\n                        </label>\n                        <label htmlFor='mc_num'>\n                            <span className='input-title'>MC Number:</span>\n                            <input type='text' id='mc_num' name='mc_num' />\n                            <span className='error'>MC Number Error</span>\n                        </label>\n                        <button\n                            className='app-button'\n                            type='submit'\n                        >\n                            Create Account\n                        </button>\n                    </div>\n                </fieldset>\n            </form>\n        );\n    }\n}\n\nexport default CreateAccount;","import React, { Component } from 'react';\nimport './CreateAccountPage.css';\nimport AppContext from '../../Contexts/AppContext';\nimport { Redirect } from 'react-router-dom';\nimport CreateAccount from '../../Components/CreateAccount/CreateAccount';\n\nclass CreateAccountPage extends Component {\n\n    static contextType = AppContext;\n\n    render() {\n\n        const { basePath, loggedIn, newUser } = this.context;\n\n        return (\n            !loggedIn\n                ? <div className='CreateAccountPage'>\n                    <CreateAccount />\n                </div>\n                : !newUser\n                    ? <Redirect to={`${basePath}/dashboard`} />\n                    : <Redirect to={`${basePath}/newuser`} />\n        );\n    }\n}\n\nexport default CreateAccountPage;","export default {\n    API_ENDPOINT: process.env.API_ENDPOINT || 'https://rocky-waters-07125.herokuapp.com/api',\n    TOKEN_KEY: process.env.TOKEN_KEY || '9e7d73be-f7f1-11e9-8f0b-362b9e155667',\n}\n\n// https://rocky-waters-07125.herokuapp.com/api","import config from '../config';\n\nconst TokenService = {\n  saveAuthToken(token) {\n    window.localStorage.setItem(config.TOKEN_KEY, token)\n  },\n  getAuthToken() {\n    return window.localStorage.getItem(config.TOKEN_KEY)\n  },\n  clearAuthToken() {\n    window.localStorage.removeItem(config.TOKEN_KEY)\n  },\n  hasAuthToken() {\n    return !!TokenService.getAuthToken()\n  },\n}\n\nexport default TokenService","import config from '../config';\n\nconst AuthApiService = {\n    // login authorization\n    postLogin(credentials){\n        return fetch(`${config.API_ENDPOINT}/auth/login`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify(credentials)\n        })\n        .then(res => {\n            if(!res.ok) {\n                return res.json().then(e => {\n                    throw new Error(e.error.message)\n                })\n            }\n            \n            return res.json();\n        })\n        .then(res => {\n            return res\n        })\n        .catch(error => {\n            return error;\n        })\n    }\n}\n\nexport default AuthApiService;","import React, { Component } from 'react';\nimport './LoginForm.css';\nimport { validateUserName, validatePassword } from '../../HelperFunctions/HelperFunctions';\nimport TokenService from '../../Services/TokenService';\nimport AuthApiService from '../../Services/AuthApiService';\nimport AppContext from '../../Contexts/AppContext';\n\nclass LoginForm extends Component {\n\n    state = {\n        error: null,\n        incorrectUsername: false,\n        incorrectPassword: false,\n    }\n\n    static contextType = AppContext;\n\n    static defaultProps = {\n        onLoginSuccess: () => {},\n    }\n\n    handleSubmitLoginForm = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            error: null,\n            incorrectUsername: false,\n            incorrectPassword: false,\n        })\n\n        const { username, password } = e.target;\n\n        AuthApiService.postLogin({\n            username: username.value,\n            password: password.value\n        })\n            .then((res) => {\n                if(res.message === 'Incorrect Username'){\n                    this.setState({\n                        incorrectUsername: true,\n                        error: res.message\n                    })\n                    username.value = '';\n                    password.value = '';\n                    username.focus();\n                }\n                if(res.message === 'Incorrect Password'){\n                    this.setState({\n                        incorrectPassword: true,\n                        error: res.message\n                    })\n                    password.value = '';\n                }\n                \n                if(!this.state.incorrectPassword && !this.state.incorrectUsername){\n                    TokenService.saveAuthToken(res.authToken);\n                    this.context.setLoggedInCarrier(res.loggedInUser);\n                    this.props.onLoginSuccess();\n                    username.value = '';\n                    password.value = '';\n                }\n            })\n            .catch((res) => {\n                this.setState({\n                    error: res.error\n                })\n            })\n    }\n\n    render() {\n\n\n        const { incorrectPassword, incorrectUsername, error } = this.state;\n\n\n        return (\n\n            <form className='LoginForm width-wrapper' onSubmit={(e) => { this.handleSubmitLoginForm(e) }}>\n                <fieldset>\n                    <legend className='blue-back white-text'>\n                        Login\n                        </legend>\n                    <div className='flex'>\n                        <label htmlFor='username'>\n                            <span className='input-title'>* Username:</span>\n                            <input\n                                type='text'\n                                id='username'\n                                name='username'\n                                required\n                                onChange={(e) => { validateUserName(e) }}\n                            />\n                            {\n                                incorrectUsername &&\n                                <span className='error'>{error}</span>\n                            }\n                        </label>\n                        \n                        <label htmlFor='password'>\n                            <span className='input-title'>* Password:</span>\n                            <input\n                                type='password'\n                                id='password'\n                                name='password'\n                                required\n                                onChange={(e) => { validatePassword(e) }} \n                            />\n                            {\n                                incorrectPassword &&\n                                <span className='error'>{error}</span>\n                            }\n                        </label>\n                        <button\n                            className='app-button'\n                            type='submit'\n                        >\n                            Login\n                            </button>\n                    </div>\n                </fieldset>\n            </form>\n        );\n    }\n}\n\nexport default LoginForm;","import React, { Component } from \"react\";\nimport \"./LoginPage.css\";\nimport AppContext from \"../../Contexts/AppContext\";\nimport LoginForm from \"../../Components/LoginForm/LoginForm\";\nimport { Redirect } from \"react-router-dom\";\n\nclass LoginPage extends Component {\n  static contextType = AppContext;\n\n  // using async await so app proceeds only once complete data for carrier is received\n  onLoginSuccess = async () => {\n    this.props.history.push(\"/\");\n    this.context.setLoggedIn(true);\n    this.context.getShipments();\n    this.context.getIdleDrivers();\n    \n  };\n\n  render() {\n    const { basePath, loggedIn, newUser } = this.context;\n\n    return !loggedIn ? (\n      <section className=\"LoginPage\">\n        <LoginForm\n          onLoginSuccess={() => {\n            this.onLoginSuccess();\n          }}\n        />\n      </section>\n    ) : !newUser ? (\n      <Redirect to={`${basePath}/dashboard`} />\n    ) : (\n      <Redirect to={`${basePath}/newuser`} />\n    );\n  }\n}\n\nexport default LoginPage;\n","import React, { Component } from \"react\";\nimport \"./LoadListBox.css\";\nimport AppContext from \"../../Contexts/AppContext\";\nimport { Link } from \"react-router-dom\";\n\nclass LoadListBox extends Component {\n  static contextType = AppContext;\n\n  static defaultProps = {\n    loadStatus: \"\"\n  };\n\n  formatDate = dbDate => {\n    const date = new Date(dbDate);\n    let day = date.getDate();\n    let month = date.getMonth();\n    let year = date.getYear();\n\n    return `${month + 1}/${day}/${year + 1900}`;\n  };\n\n\n  // A Method that sorts shipments as per the property requested\n  sortShipments = (shipments, property) => {\n    return shipments.sort((a, b) => (a[property] < b[property] ? 1 : -1));\n  };\n\n  getLoadsWithStatus = status => {\n    const { basePath } = this.context;\n    let shipments;\n    if (status !== \"all\") {\n      // filter shipments based on load status passed in props\n      shipments = this.context.shipments.filter(\n        shipment => shipment.status === status\n      );\n    } else {\n      shipments = this.context.shipments.filter(shipment => shipment);\n      // get sorted shipments with pickup date\n      shipments = this.sortShipments(shipments, \"pickup_date\");\n    }\n\n    if (shipments.length === 0) {\n      return <li className=\"empty-list\">No {status} Loads</li>;\n    }\n    return shipments.map(shipment => {\n      return (\n        <li className=\"load\" key={shipment.id}>\n          <div className=\"pick-up\">\n            <h6>Pick-up</h6>\n            <br />\n            <span className=\"red-bold\">\n              {shipment.pickup_warehouse.city},{\" \"}\n              {shipment.pickup_warehouse.state}\n              <br />\n              Date: {this.formatDate(shipment.pickup_date)}\n            </span>\n          </div>\n          <div className=\"status-line-wrapper\">\n            <div className=\"rate-broker\">\n              <div className=\"miles\">\n                <h6>Loaded Miles</h6>\n                <br />\n                {shipment.miles}\n              </div>\n              {status === \"all\" ? (\n                <div className=\"status\">\n                  <h6>Status</h6>\n                  <br />\n                  <span className=\"red-bold\">{shipment.status}</span>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n            <div className=\"status-line\">\n              <div className=\"circle left\"></div>\n              <div className=\"line\"></div>\n              <div className=\"circle right\"></div>\n            </div>\n            <div className=\"rate-broker\">\n              <div className=\"rate\">\n                <h6>Rate</h6>\n                <br />\n                <span className=\"rate-amount red-bold\">\n                  $\n                  {shipment.rate\n                    .toString()\n                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                </span>\n              </div>\n              <div className=\"broker\">\n                <h6>Broker</h6>\n                <br />\n                {shipment.broker}\n              </div>\n            </div>\n          </div>\n          <div className=\"delivery\">\n            <h6>Delivery</h6>\n            <br />\n            <span className=\"red-bold\">\n              {shipment.delivery_warehouse.city},{\" \"}\n              {shipment.delivery_warehouse.state} <br />\n              Date: {this.formatDate(shipment.delivery_date)}\n            </span>\n          </div>\n          <div className=\"load-buttons\">\n            <Link className='app-button' to={`${basePath}/loads/${shipment.id}`}>\n                View\n            </Link>\n            <Link className='app-button' to={`${basePath}/loads/edit/${shipment.id}`}>\n                Edit\n            </Link>\n          </div>\n        </li>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"LoadListBox blue-text\">\n        <h3 className=\"blue-back white-text\">{this.props.loadStatus} Loads</h3>\n        <ul className=\"un-assigned-loads\">\n          {this.getLoadsWithStatus(this.props.loadStatus)}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default LoadListBox;\n","import React, {Component} from 'react';\nimport './DriverCard.css';\nimport {Link} from 'react-router-dom';\nimport AppContext from '../../Contexts/AppContext';\n\n\nclass DriverCard extends Component{\n    \n    static defaultProps = {\n        driver: ''\n    }\n\n    static contextType = AppContext;\n    \n    render(){\n\n        const {driver} = this.props;\n        const {basePath} = this.context;\n\n        return(\n            <div className='DriverCard grey-back'>\n                <div className='flex-wrapper'>\n                    <div className='card-div'>\n                        <h6>Driver</h6>\n                        <p>{driver.full_name}</p>\n                    </div>\n                    <div className='card-div'>\n                        <h6>Pay Rate</h6>\n                        <p>${driver.pay_rate}</p>\n                    </div>\n                    <div className='card-div'>\n                        <h6 className='small-header'>Equipment #</h6>\n                        <p>{driver.equipment.unit_num ? driver.equipment.unit_num : 'No Equipment'}</p>\n                    </div>\n                </div>\n                <div className='view-button'>\n                    <Link to={`${basePath}/driver/${driver.id}`} className='app-button'>\n                        View\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DriverCard;","import React, { Component } from 'react';\nimport './IdleDriversBox.css';\nimport AppContext from '../../Contexts/AppContext';\nimport DriverCard from '../DriverCard/DriverCard';\n\nclass IdleDriversBox extends Component {\n    \n    static contextType = AppContext;\n\n    renderIdleDriversList = () => {\n        const {idleDrivers} = this.context\n        return idleDrivers.map((iDriver) => {\n            return <li key={iDriver.id}><DriverCard driver={iDriver} /></li>\n        })\n    }\n\n    render() { \n        return (\n            <div className='IdleDriversBox'>\n                <h3 className='blue-back white-text'>Idle Drivers</h3>\n                <ul>\n                    {this.renderIdleDriversList()}\n                </ul>\n            </div>\n        );\n    }\n}\n \nexport default IdleDriversBox;","import React, { Component } from 'react';\nimport './DashboardPage.css';\nimport {Link} from 'react-router-dom';\nimport AppContext from '../../Contexts/AppContext';\nimport LoadListBox from '../../Components/LoadListBox/LoadListBox';\nimport IdleDriversBox from '../../Components/IdleDriversBox/IdleDriversBox';\n\nclass DashboardPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n\n    static contextType = AppContext;\n\n    render() { \n\n        const {basePath} = this.context;\n\n        return (  \n            <section className='DashboardPage width-wrapper'>\n                <div className='AddLoadSection'>\n                    <Link className='add-load app-button' to={`${basePath}/new/load`}>\n                        Add Load\n                    </Link>\n                </div>\n                <LoadListBox loadStatus='un-assigned' />\n                <LoadListBox loadStatus='in transit' />\n                <IdleDriversBox />\n\n            </section>\n        );\n    }\n}\n \nexport default DashboardPage;","import TokenService from './TokenService';\nimport config from '../config';\n\nconst CarrierService = {\n    getCarrierData(){\n        return fetch(`${config.API_ENDPOINT}/carrier`, {\n            method: 'GET',\n            headers: {\n                \"content-type\": \"application/json\",\n                \"Authorization\": `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(res => res.json())\n        .then(carrierData => {\n            return carrierData;\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    },\n    getCarrierInfo(){\n        return fetch(`${config.API_ENDPOINT}/carrier-info`, {\n            method: 'GET',\n            headers: {\n                \"content-type\": \"application/json\",\n                \"Authorization\" : `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(res => res.json())\n        .then(carrierInfo =>  {\n            return carrierInfo;\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n}\n\nexport default CarrierService;","import React, {Component} from 'react';\nimport AppContext from '../../Contexts/AppContext';\nimport './Logout.css';\nimport TokenService from '../../Services/TokenService';\nimport CarrierServices from '../../Services/CarrierServices';\n\nclass Logout extends Component {\n\n    static contextType = AppContext;\n\n    getCarrierInfoInComponent = async () => {\n        const carrier = await CarrierServices.getCarrierInfo()\n            .then(res => {\n                this.context.setLoggedInCarrier(res);\n                return res;\n            })\n            .catch(error => error);\n        this.setState({\n            carrier: carrier[0]\n        })\n    }\n\n    constructor(props){\n        super(props);\n        this.state = {\n            carrier: {}\n        }\n        this.getCarrierInfoInComponent()\n    }\n\n    state = {\n        carrier: {}\n    }\n\n    handleLogout = () => {\n        this.context.setLoggedIn(false);\n        TokenService.clearAuthToken();\n        this.props.history.push('/');\n    }\n\n    \n\n    render(){\n        return (\n            <div className='Logout width-wrapper'>\n                Welcome, <span className='carrier-name red-text'>\n                    {this.state.carrier.full_name}\n                </span>!! <button className='app-link' onClick={() => {this.handleLogout()}}>Logout</button>\n            </div>\n        )\n    }\n}\n\nexport default Logout;","import TokenService from './TokenService';\nimport config from '../config';\n\nconst DriversService = {\n    getDriversData(){\n        return fetch(`${config.API_ENDPOINT}/drivers`, {\n            method: 'GET',\n            headers: {\n                \"content-type\": \"application/json\",\n                \"Authorization\": `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(response => response.json())\n        .then(driversData => driversData)\n        .catch((error) => {\n            console.log(error);\n        })\n    },\n    getIdleDrivers(){\n        return fetch(`${config.API_ENDPOINT}/drivers/idle`, {\n            method: 'GET',\n            headers: {\n                \"content-type\": \"application/json\",\n                \"Authorization\": `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(response => response.json())\n        .then(idleDrivers => idleDrivers)\n        .catch((error) => {\n            console.log(error);\n        })\n    },\n}\n\nexport default DriversService;","import TokenService from \"./TokenService\";\nimport config from \"../config\";\n\nconst EquipmentService = {\n  getEquipments() {\n    return fetch(`${config.API_ENDPOINT}/equips`, {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `bearer ${TokenService.getAuthToken()}`\n      }\n    })\n      .then(response => response.json())\n      .then(equipments => equipments)\n      .catch(error => {\n        console.log(error);\n      });\n  }\n};\n\nexport default EquipmentService;\n","import React, {Component} from 'react';\nimport './LoadsPage.css';\nimport LoadListBox from '../../Components/LoadListBox/LoadListBox';\n\nclass LoadsPage extends Component {\n\n    render(){\n        return (\n            <section className='LoadsPage width-wrapper'>\n                <LoadListBox loadStatus='all' />\n            </section>\n        )\n    }\n}\n\nexport default LoadsPage;","import React, {Component} from 'react';\nimport './EquipmentCard.css';\n\nclass EquipmentCard extends Component{\n    \n    \n    render(){\n\n        const {equipment} = this.props;\n\n        return (\n            <div className='EquipmentCard grey-back blue-text'>\n                <div className='flex-row'>\n                    <div className='equip-num'>\n                        <h6>Unit Num</h6>\n                        <p>{equipment.unit_num}</p>\n                    </div>\n                    {\n                        equipment.driver !== null &&\n                        <div className='equip-driver'>\n                            <h6>Driver</h6>\n                            <p>{equipment.driver.full_name}</p>\n                        </div>\n                    }\n                </div>\n                <div className='equipment-buttons'>\n                    <button className='app-button'>\n                        Edit\n                    </button>\n                    <button className='app-button'>\n                        Delete\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default EquipmentCard;","import React, {Component} from 'react';\nimport './EquipmentsPage.css';\nimport AppContext from '../../Contexts/AppContext';\nimport EquipmentCard from '../../Components/EquipmentCard/EquipmentCard';\n\nclass EquipmentsPage extends Component{\n\n    static contextType = AppContext;\n\n    handleAddEquipment = (e) => {\n        e.preventDefault();\n        console.log(`Equipment Add Submitted`);\n    }\n\n    filterEquipments = (equipments, filters) => {\n        return equipments.filter(equipment => equipment[filters.property] !== filters.value)\n    }\n\n    renderEquipmentList = () => {\n        let { equipments } = this.context;\n        \n        equipments = this.filterEquipments(equipments, {\n            'property': 'status',\n            'value' : 'inactive'\n        })\n\n        return equipments.map(equip => {\n            return (\n                <li key={equip.id}>\n                    <EquipmentCard equipment={equip} />\n                </li>\n            )\n        })\n    }\n\n    render(){\n        return (\n            <section className='EquipmentPage width-wrapper'>\n                {/* <div className='add-equipment-section'>\n                    <form className='add-form' onSubmit={(e)=> {this.handleAddEquipment(e)}}>\n                        <fieldset>\n                            <legend className='blue-back white-text'>Add Equipment</legend>\n                            <div className='flex'>\n                                <label htmlFor=''>\n                                    <span>Unit Num</span>\n                                    <input \n                                        type='text'\n                                        id='unit_num'\n                                        name='unit_num'\n                                        required\n                                    />\n                                </label>\n                                <button className='app-button' type='submit'>\n                                    Add\n                                </button>\n                            </div>\n                        </fieldset>\n                    </form>\n                </div> */}\n                <div className='box'>\n                    <h3 className='box-header blue-back white-text'>Equipment List</h3>\n                    <ul className='equipment-list'>\n                        {this.renderEquipmentList()}\n                    </ul>\n                </div>\n            </section>\n        )\n    }\n}\n\n\nexport default EquipmentsPage;","import React, {Component} from 'react';\nimport './DriversPage.css';\n\nclass DriversPage extends Component{\n    render(){\n        return (\n            <section className='DriversPage width-wrapper'>\n                DriversPage\n            </section>\n        )\n    }\n}\n\n\nexport default DriversPage;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Header from \"../Header/Header\";\nimport HomePage from \"../../Routes/HomePage/HomePage\";\nimport AppContext from \"../../Contexts/AppContext\";\nimport CreateAccountPage from \"../../Routes/CreateAccountPage/CreateAccountPage\";\nimport LoginPage from \"../../Routes/LoginPage/LoginPage\";\nimport TokenService from \"../../Services/TokenService\";\nimport DashboardPage from \"../../Routes/DashboardPage/DashboardPage\";\nimport Logout from \"../Logout/Logout\";\nimport CarrierService from \"../../Services/CarrierServices\";\nimport DriversService from \"../../Services/DriversService\";\nimport EquipmentService from \"../../Services/EquipmentsService\";\nimport LoadsPage from \"../../Routes/LoadsPage/LoadsPage\";\nimport EquipmentsPage from \"../../Routes/EquipmentsPage/EquipmentsPage\";\nimport DriversPage from \"../../Routes/DriversPage/DriversPage\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      basePath: \"/dispatch-office-client\",\n      loggedIn: false,\n      newUser: false,\n      shipments: [],\n      idleDrivers: [],\n      equipments: [],\n      loggedInCarrier: {\n        full_name: \"\",\n        company_name: \"\",\n        mc_num: \"\"\n      }\n    };\n  }\n\n  // gets all the shipments\n  getShipments = async () => {\n    const shipments = await CarrierService.getCarrierData()\n      .then(data => data)\n      .catch(err => console.log(err));\n    this.setState({\n      shipments\n    });\n  };\n\n  // gets all idleDrivers for dashboard\n  getIdleDrivers = async () => {\n    const idleDrivers = await DriversService.getIdleDrivers()\n      .then(data => data)\n      .catch(err => console.log(err));\n    this.setState({\n      idleDrivers\n    });\n  };\n\n  getEquipments = async () => {\n    const equipments = await EquipmentService.getEquipments()\n      .then(data => data)\n      .catch(err => console.log(err));\n    this.setState({\n      equipments\n    })\n  }\n\n  componentDidMount = async () => {\n    this.setState({\n      loggedIn: TokenService.hasAuthToken()\n    });\n    if (TokenService.hasAuthToken()) {\n      this.getShipments();\n      this.getIdleDrivers();\n      this.getEquipments();\n    }\n  };\n\n  setLoggedIn = loggedIn => {\n    this.setState({\n      loggedIn\n    });\n  };\n\n  setLoggedInCarrier = loggedInCarrier => {\n    this.setState({\n      loggedInCarrier\n    });\n  };\n\n  setShipments = shipments => {\n    this.setState({\n      shipments\n    });\n  };\n\n  setNewUser = newUser => {\n    this.setState({\n      newUser\n    });\n  };\n\n  render() {\n    const value = {\n      basePath: this.state.basePath,\n      loggedIn: this.state.loggedIn,\n      newUser: this.state.newUser,\n      setLoggedIn: this.setLoggedIn,\n      setNewUser: this.setNewUser,\n      setShipments: this.setShipments,\n      setLoggedInCarrier: this.setLoggedInCarrier,\n      loggedInCarrier: this.state.loggedInCarrier,\n      shipments: this.state.shipments,\n      idleDrivers: this.state.idleDrivers,\n      getShipments: this.getShipments,\n      getIdleDrivers: this.getIdleDrivers,\n      equipments: this.state.equipments,\n      getEquipments: this.getEquipments,\n    };\n\n    return (\n      <AppContext.Provider value={value}>\n        <div className=\"App\">\n          <Header />\n          {this.state.loggedIn && <Route path=\"/\" component={Logout} />}\n          <Switch>\n            {/* Begin the app with the /app endpoint */}\n\n            <Route exact path=\"/\">\n              <Redirect to={value.basePath} />\n            </Route>\n\n            <Route exact path={value.basePath} component={HomePage} />\n\n            <Route\n              exact\n              path={`${value.basePath}/create-account`}\n              component={CreateAccountPage}\n            />\n\n            <Route\n              exact\n              path={`${value.basePath}/login`}\n              component={LoginPage}\n            />\n\n            <Route\n              exact\n              path={`${value.basePath}/dashboard`}\n              component={DashboardPage}\n            />\n\n            <Route\n              exact\n              path={`${value.basePath}/loads`}\n              component={LoadsPage}\n            />\n\n            <Route\n              exact\n              path={`${value.basePath}/equipments`}\n              component={EquipmentsPage}\n            />\n\n            <Route\n              exact\n              path={`${value.basePath}/drivers`}\n              component={DriversPage}\n            />\n          </Switch>\n        </div>\n      </AppContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , \n    document.getElementById('root'));\n"],"sourceRoot":""}